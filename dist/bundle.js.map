{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://beginner-js-starter/./lib/elements.js","webpack://beginner-js-starter/./myJs.js","webpack://beginner-js-starter/./lib/helpers.js","webpack://beginner-js-starter/./node_modules/nanoid/index.browser.js","webpack://beginner-js-starter/./lib/card.js","webpack://beginner-js-starter/./lib/form.js"],"sourcesContent":["\r\nexport const list = document.querySelector('.list');\r\nexport const addPizzaForm = document.querySelector('.add-pizza-form');\r\nexport const buttonCheck = document.querySelector('.check-all-pizzas');\r\nexport const formsList = document.querySelector('.forms-list');\r\n","import { \r\n  list, \r\n  addPizzaForm, \r\n  buttonCheck, \r\n  formsList,\r\n} from './lib/elements';\r\n\r\nimport { \r\n  createPizza,\r\n  remove,\r\n  markAsSelected,\r\n  edit,\r\n  checkButtons\r\n} from './lib/helpers';\r\n\r\nimport cardHTML from './lib/card';\r\nimport formHTML from './lib/form';\r\n\r\nlet items = [];\r\n\r\nfunction handleSubmit(e) {\r\n  e.preventDefault();\r\n  const newItems = createPizza(items, e.currentTarget);\r\n  items = newItems;\r\n\r\n  e.currentTarget.reset();\r\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\nfunction displayItems() {\r\n  list.innerHTML = cardHTML(items); \r\n}\r\n\r\nfunction displayFormItems() {\r\n  formsList.innerHTML = formHTML(items);\r\n}\r\n\r\nfunction saveToLocalStorage() {\r\n  localStorage.setItem('items', JSON.stringify(items));\r\n}\r\n\r\nfunction getFromLocalStorage() {\r\n  const localStorageItems = JSON.parse(localStorage.getItem('items'));\r\n\r\n  if (localStorageItems && localStorageItems.length) {\r\n    // items = localStorageItems;\r\n    // localStorageItems.forEach(res => {\r\n    //   items.push(res);\r\n    // })\r\n    items.push(...localStorageItems);\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n  }\r\n}\r\n\r\naddPizzaForm.addEventListener('submit', handleSubmit);\r\nlist.addEventListener('itemsUpdated', displayItems);\r\nlist.addEventListener('itemsUpdated', displayFormItems);\r\nlist.addEventListener('itemsUpdated', saveToLocalStorage);\r\n// Делегирование событий: слушаем событие на родительском <ul>\r\n// далее делегируем событие элементу <button>\r\nlist.addEventListener('click', function(e) {\r\n  const id = parseInt(e.target.value);\r\n\r\n  if (e.target.matches('button')) {\r\n    const newItems = remove(id, items);\r\n    items = newItems;\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n  }\r\n\r\n  if (e.target.matches('input[type=\"checkbox\"]')) {\r\n    const newItems = markAsSelected(id, items);\r\n    items = newItems;\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n  }\r\n});\r\n\r\nformsList.addEventListener('submit', function(e) {\r\n  e.preventDefault();\r\n  \r\n  const itemsUpdated = edit(e.target, items);\r\n  items = itemsUpdated;\r\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n});\r\n\r\ngetFromLocalStorage();\r\n\r\nbuttonCheck.addEventListener('click', function() {\r\n  const itemsChecked = checkButtons(items);\r\n  items = itemsChecked;\r\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n})\r\n\r\n","import { nanoid } from 'nanoid';\r\n\r\nexport function createPizza(items, currentTarget) {\r\n  const title = currentTarget.title.value;\r\n  const price = currentTarget.price.value;\r\n  const image = currentTarget.image.value;\r\n  const description = currentTarget.description.value;\r\n  console.log(nanoid())\r\n  if (!title || !price || !image || !description) return;\r\n\r\n  const item = {\r\n    title,\r\n    price,\r\n    image,\r\n    description,\r\n    selected: false,\r\n    id: Date.now()\r\n  }\r\n\r\n  return [...items, item];\r\n}\r\n\r\nexport function remove(id, items) {\r\n  return items.filter(res => res.id !== id);\r\n}\r\n\r\nexport function markAsSelected(id, items) {\r\n  const item = items.find(res => res.id === id);\r\n  const curIndex = items.findIndex(res => res.id === id);\r\n\r\n  const itemUpdated = {\r\n    ...item,\r\n    selected: !item.selected\r\n  }\r\n\r\n  return [\r\n    ...items.slice(0, curIndex),\r\n    itemUpdated,\r\n    ...items.slice(curIndex + 1)\r\n  ]\r\n}\r\n\r\nexport function edit(eTarget, items) {\r\n  const id = parseInt(eTarget.id);\r\n  const title = eTarget.title.value;\r\n  const price = eTarget.price.value;\r\n  const image = eTarget.image.value;\r\n  const description = eTarget.description.value;\r\n\r\n  if (!title || !price || !image || !description) return;\r\n\r\n  // 1) Найти пиццу по ID\r\n  const itemOriginal = items.find(res => res.id === id);\r\n  const curIndex = items.findIndex(res => res.id === id);\r\n\r\n  const itemUpdated = {\r\n    ...itemOriginal,\r\n    title,\r\n    price,\r\n    image,\r\n    description\r\n  }\r\n\r\n  return [\r\n    ...items.slice(0, curIndex),\r\n    itemUpdated,\r\n    ...items.slice(curIndex + 1)\r\n  ]\r\n}\r\n\r\nexport function checkButtons(items) {\r\n  let checkedPizzas = 0;\r\n  let itemsChecked = [];\r\n\r\n  items.forEach(res => {\r\n    if (res.selected === true) {\r\n      checkedPizzas++;\r\n    }\r\n  });\r\n\r\n  if (checkedPizzas === items.length) {\r\n    itemsChecked = items.map(res => {\r\n      return {\r\n        ...res,\r\n        selected: false\r\n      }\r\n    });\r\n  } else {\r\n    itemsChecked = items.map(res => {\r\n      return {\r\n        ...res,\r\n        selected: true\r\n      }\r\n    });\r\n  }\r\n  return itemsChecked;\r\n}\r\n\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","\r\nfunction cardHTML(items) {\r\n  return items.map(item => {\r\n    return (\r\n      `\r\n        <li class='pizza-item'>\r\n          <button value=\"${item.id}\" class='delete'>&times;</button>\r\n          <div class='pizza-item-image'>\r\n            <img src=\"${item.image}\" alt=\"${item.title}\"/>\r\n          </div>\r\n          <div class='pizza-item-details'>\r\n            <div class='pizza-item-details-top'>\r\n              <div class='itemHeader'>\r\n                <input \r\n                  type='checkbox' \r\n                  value=\"${item.id}\"\r\n                  ${item.selected && 'checked'}\r\n                  />\r\n                <span class='itemName'>${item.title}</span>\r\n              </div>\r\n              <span class='itemPrice'>${item.price}</span>\r\n            </div>\r\n            <span class='pizza-item-details-bottom'>${item.description}</span>\r\n          </div>\r\n        </li>\r\n      `\r\n    )\r\n  }).join('');\r\n}\r\n\r\nexport default cardHTML;","\r\n\r\nexport default function formHTML(items) {\r\n  return items.map(item => {\r\n    return (\r\n      `<form class=\"edit-pizza-form\" autocomplete=\"off\" id=\"${item.id}\">\r\n        <input type=\"text\" name=\"title\" value=\"${item.title}\" placeholder=\"Title\" />\r\n        <input type=\"text\" name=\"price\" value=\"${item.price}\" placeholder=\"Price\" />\r\n        <input type=\"text\" name=\"image\" value=\"${item.image}\" placeholder=\"Image\" />\r\n        <input type=\"text\" name=\"description\" value=\"${item.description}\" placeholder=\"Description\" />\r\n        <button type=\"submit\">+ Редактировать</button>\r\n      </form>\r\n      `\r\n    )\r\n  }).join('');\r\n}\r\n"],"names":["list","document","querySelector","addPizzaForm","buttonCheck","formsList","localStorageItems","items","addEventListener","e","preventDefault","newItems","currentTarget","title","value","price","image","description","console","log","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","item","selected","Date","now","createPizza","reset","dispatchEvent","CustomEvent","innerHTML","map","join","cardHTML","formHTML","localStorage","setItem","JSON","stringify","parseInt","target","matches","filter","res","remove","find","curIndex","findIndex","itemUpdated","slice","markAsSelected","itemsUpdated","eTarget","itemOriginal","edit","parse","getItem","length","push","itemsChecked","checkedPizzas","forEach","checkButtons"],"sourceRoot":""}